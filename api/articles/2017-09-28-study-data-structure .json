{"title":"数据结构笔记","slug":"2017-09-28-study-data-structure ","date":"2017-09-28T13:51:56.000Z","updated":"2019-12-08T16:56:55.000Z","comments":false,"path":"api/articles/2017-09-28-study-data-structure .json","excerpt":"数据结构是相互之间存在着某种逻辑关系的数据元素的集合数据的逻辑结构主要分为四类（线性结构，树性结构，图结构或者网状结构，集合结构）线性结构：具有前后顺序关系树性结构：具有后续图结构或网状结构：具有网状结构集合元素：在集合中的元素是相对独立的，他们之间没有这些关系的限定数据结构是一个二元组：Data_Structures=(D,S)<br>  其中：D是数据元素的有限集。S是D上关系的有限集。","covers":null,"content":"<link rel=\"stylesheet\" href=\"/assets/css/hint.min.css\"></link><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css\"><div class=\".article-gallery\" <ul>\n<li>数据结构是相互之间存在着某种逻辑关系的数据元素的集合</li>\n<li>数据的逻辑结构主要分为四类（线性结构，树性结构，图结构或者网状结构，集合结构）<ul>\n<li>线性结构：具有前后顺序关系</li>\n<li>树性结构：具有后续</li>\n<li>图结构或网状结构：具有网状结构</li>\n<li>集合元素：在集合中的元素是相对独立的，他们之间没有这些关系的限定</li>\n</ul>\n</li>\n<li>数据结构是一个二元组：Data_Structures=(D,S)<br>  其中：D是数据元素的有限集。<pre><code>S是D上关系的有限集。</code></pre><a id=\"more\"></a></li>\n<li>数据的存储结构：逻辑结构在计算机中表示<ul>\n<li>数据元素的映象方法：例如：用二进制（bit）的位串表示数据元素</li>\n<li>关系的映象方法：在计算机中有两种不同的方法：顺序映象和非顺序映象，并由此得到两种不同的存储结构：顺序存储结构和链式存储结构。<ul>\n<li>顺序存储结构：以相对的存储位置表示后继关系，例如：C语言的数组</li>\n<li>链式存储结构：以附加信息（指针）表示后继关系，需要永一个和x在一起的附加信息指示y的存储位置，例如：C语言的指针类型</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>数据类型：是一个值的集合在定义在此集合上的一组操作的总称</li>\n<li>抽象数据类型：是指一个数学模型以及定义在此数学模型上的一组操作</li>\n\n<h6 id=\"算法和算法分析\"><a href=\"#算法和算法分析\" class=\"headerlink\" title=\"算法和算法分析\"></a>算法和算法分析</h6><ul>\n<li>算法是对特定问题求解的一种描述，它是指令的有限序列，其中每一条指令表示一个或多个操作，一个算法必须满足一下五个重要特征：<ol>\n<li>有穷性：对于任意一组合法输入值，在执行有穷步骤之后一点能结束，即：算法中的每个步骤能在有限时间内完成。</li>\n<li>确定性</li>\n<li>可行性</li>\n<li>输入</li>\n<li>输出</li>\n</ol>\n</li>\n</ul>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);\n        }</script>","more":"</li>\n<li>数据的存储结构：逻辑结构在计算机中表示<ul>\n<li>数据元素的映象方法：例如：用二进制（bit）的位串表示数据元素</li>\n<li>关系的映象方法：在计算机中有两种不同的方法：顺序映象和非顺序映象，并由此得到两种不同的存储结构：顺序存储结构和链式存储结构。<ul>\n<li>顺序存储结构：以相对的存储位置表示后继关系，例如：C语言的数组</li>\n<li>链式存储结构：以附加信息（指针）表示后继关系，需要永一个和x在一起的附加信息指示y的存储位置，例如：C语言的指针类型</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>数据类型：是一个值的集合在定义在此集合上的一组操作的总称</li>\n<li>抽象数据类型：是指一个数学模型以及定义在此数学模型上的一组操作</li>\n\n<h6 id=\"算法和算法分析\"><a href=\"#算法和算法分析\" class=\"headerlink\" title=\"算法和算法分析\"></a>算法和算法分析</h6><ul>\n<li>算法是对特定问题求解的一种描述，它是指令的有限序列，其中每一条指令表示一个或多个操作，一个算法必须满足一下五个重要特征：<ol>\n<li>有穷性：对于任意一组合法输入值，在执行有穷步骤之后一点能结束，即：算法中的每个步骤能在有限时间内完成。</li>\n<li>确定性</li>\n<li>可行性</li>\n<li>输入</li>\n<li>输出</li>\n</ol>\n</li>\n</ul>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);\n        }</script>","categories":[{"name":"每日一学","path":"api/categories/每日一学.json"}],"tags":[{"name":"大战数据结构","path":"api/tags/大战数据结构.json"},{"name":"学习","path":"api/tags/学习.json"}]}