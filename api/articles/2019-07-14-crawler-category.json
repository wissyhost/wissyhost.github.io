{"title":"网站类目爬取技巧","slug":"2019-07-14-crawler-category","date":"2019-07-11T13:17:56.000Z","updated":"2020-02-23T10:18:07.148Z","comments":false,"path":"api/articles/2019-07-14-crawler-category.json","excerpt":null,"covers":["/static/images/2019-07-14/%E4%BA%AC%E4%B8%9C%E6%89%8B%E6%9C%BA%E7%89%88%E7%B1%BB%E7%9B%AE%E9%80%89%E6%8B%A9.png","/static/images/2019-07-14/%E4%BA%AC%E4%B8%9C%E7%94%B5%E8%84%91%E7%89%88.png"],"content":"<link rel=\"stylesheet\" href=\"/assets/css/hint.min.css\"></link><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css\"><div class=\".article-gallery\" <p>网站类目爬取技巧<p></p>\n<p>我们在爬取网站的时候,经常因为找不到类目入口需要人工整理类目元数据,再输入到爬虫程序里面,这边介绍的方法目前有两种,1. 获取 JS 对象里面的数据,2. 通过 url 分析,后续在补充</p>\n<h3 id=\"JS-对象里面包含的数据\"><a href=\"#JS-对象里面包含的数据\" class=\"headerlink\" title=\"JS 对象里面包含的数据\"></a>JS 对象里面包含的数据</h3><p>以京东手机触屏版为例, 打开首页类目的页面</p>\n<p><a href=\"https://so.m.jd.com/webportal/channel/m_category?searchFrom=bysearchbox\" target=\"_blank\" rel=\"noopener\">https://so.m.jd.com/webportal/channel/m_category?searchFrom=bysearchbox</a><br><a href=\"/static/images/2019-07-14/%E4%BA%AC%E4%B8%9C%E6%89%8B%E6%9C%BA%E7%89%88%E7%B1%BB%E7%9B%AE%E9%80%89%E6%8B%A9.png\" title=\"京东手机版类目选择\" class=\"gallery-item\"><img src=\"/static/images/2019-07-14/%E4%BA%AC%E4%B8%9C%E6%89%8B%E6%9C%BA%E7%89%88%E7%B1%BB%E7%9B%AE%E9%80%89%E6%8B%A9.png\" alt=\"京东手机版类目选择\" title=\"京东手机版类目选择\"></a><br>我们分析的 JS 的事件 event 都在 document 文件内部,所有我们我们将 html 文件下载到本地并格式化<br><a href=\"/static/images/2019-07-14/%E4%BA%AC%E4%B8%9C%E8%A7%A6%E5%B1%8F%E7%89%88%E7%B1%BB%E7%9B%AE%E7%BB%93%E6%9E%9C.png\" title=\"京东触屏版类目结果\" class=\"gallery-item\"><img src=\"/static/images/2019-07-14/%E4%BA%AC%E4%B8%9C%E8%A7%A6%E5%B1%8F%E7%89%88%E7%B1%BB%E7%9B%AE%E7%BB%93%E6%9E%9C.png\" alt=\"京东触屏版类目结果\" title=\"京东触屏版类目结果\"></a><br>这个 JS 的文档就是我们想要的数据</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 这样也可以导出JS对象成Json数组</span><br><span class=\"line\"><span class=\"built_in\">JSON</span>.stringify(<span class=\"built_in\">window</span>.bigpipe.componentData.m1.data.json)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"通过获取类目-URL\"><a href=\"#通过获取类目-URL\" class=\"headerlink\" title=\"通过获取类目 URL\"></a>通过获取类目 URL</h3><p><a href=\"/static/images/2019-07-14/%E4%BA%AC%E4%B8%9C%E7%94%B5%E8%84%91%E7%89%88.png\" title=\"京东电脑版\" class=\"gallery-item\"><img src=\"/static/images/2019-07-14/%E4%BA%AC%E4%B8%9C%E7%94%B5%E8%84%91%E7%89%88.png\" alt=\"京东电脑版\" title=\"京东电脑版\"></a></p>\n<p>这些原理都是很简单,首先都是要<code>选择</code>元素,然后<code>观察</code>事件的 event,分析 JS 代码</p>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);\n        }</script>","more":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css\"><div class=\".article-gallery\" <p>网站类目爬取技巧<p></p>\n<p>我们在爬取网站的时候,经常因为找不到类目入口需要人工整理类目元数据,再输入到爬虫程序里面,这边介绍的方法目前有两种,1. 获取 JS 对象里面的数据,2. 通过 url 分析,后续在补充</p>\n<h3 id=\"JS-对象里面包含的数据\"><a href=\"#JS-对象里面包含的数据\" class=\"headerlink\" title=\"JS 对象里面包含的数据\"></a>JS 对象里面包含的数据</h3><p>以京东手机触屏版为例, 打开首页类目的页面</p>\n<p><a href=\"https://so.m.jd.com/webportal/channel/m_category?searchFrom=bysearchbox\" target=\"_blank\" rel=\"noopener\">https://so.m.jd.com/webportal/channel/m_category?searchFrom=bysearchbox</a><br><a href=\"/static/images/2019-07-14/%E4%BA%AC%E4%B8%9C%E6%89%8B%E6%9C%BA%E7%89%88%E7%B1%BB%E7%9B%AE%E9%80%89%E6%8B%A9.png\" title=\"京东手机版类目选择\" class=\"gallery-item\"><img src=\"/static/images/2019-07-14/%E4%BA%AC%E4%B8%9C%E6%89%8B%E6%9C%BA%E7%89%88%E7%B1%BB%E7%9B%AE%E9%80%89%E6%8B%A9.png\" alt=\"京东手机版类目选择\" title=\"京东手机版类目选择\"></a><br>我们分析的 JS 的事件 event 都在 document 文件内部,所有我们我们将 html 文件下载到本地并格式化<br><a href=\"/static/images/2019-07-14/%E4%BA%AC%E4%B8%9C%E8%A7%A6%E5%B1%8F%E7%89%88%E7%B1%BB%E7%9B%AE%E7%BB%93%E6%9E%9C.png\" title=\"京东触屏版类目结果\" class=\"gallery-item\"><img src=\"/static/images/2019-07-14/%E4%BA%AC%E4%B8%9C%E8%A7%A6%E5%B1%8F%E7%89%88%E7%B1%BB%E7%9B%AE%E7%BB%93%E6%9E%9C.png\" alt=\"京东触屏版类目结果\" title=\"京东触屏版类目结果\"></a><br>这个 JS 的文档就是我们想要的数据</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 这样也可以导出JS对象成Json数组</span><br><span class=\"line\"><span class=\"built_in\">JSON</span>.stringify(<span class=\"built_in\">window</span>.bigpipe.componentData.m1.data.json)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"通过获取类目-URL\"><a href=\"#通过获取类目-URL\" class=\"headerlink\" title=\"通过获取类目 URL\"></a>通过获取类目 URL</h3><p><a href=\"/static/images/2019-07-14/%E4%BA%AC%E4%B8%9C%E7%94%B5%E8%84%91%E7%89%88.png\" title=\"京东电脑版\" class=\"gallery-item\"><img src=\"/static/images/2019-07-14/%E4%BA%AC%E4%B8%9C%E7%94%B5%E8%84%91%E7%89%88.png\" alt=\"京东电脑版\" title=\"京东电脑版\"></a></p>\n<p>这些原理都是很简单,首先都是要<code>选择</code>元素,然后<code>观察</code>事件的 event,分析 JS 代码</p>\n</div><script src=\"https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js\"></script><script>if (typeof lightGallery !== 'undefined') {\n        var options = {\n            selector: '.gallery-item'\n        };\n        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);\n        }</script>","categories":[{"name":"爬虫","path":"api/categories/爬虫.json"}],"tags":[{"name":"爬虫","path":"api/tags/爬虫.json"}]}